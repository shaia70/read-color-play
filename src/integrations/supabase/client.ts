
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

console.log('=== SUPABASE CLIENT MODULE LOADING ===');

// Hardcoded values - these should always be available
const supabaseUrl = "https://pahqikhckqjujbhvqnyb.supabase.co";
const supabaseKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBhaHFpa2hja3FqdWpiaHZxbnliIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgwODkzNzMsImV4cCI6MjA2MzY2NTM3M30.zVNZAEFgwaVRPFHFYA-XN1kqcUeXl-24kj6fnsLQDH8";

console.log('Supabase URL:', supabaseUrl);
console.log('Supabase Key present:', !!supabaseKey);

// Validate the values before creating client
if (!supabaseUrl || supabaseUrl.trim() === '') {
  console.error('ERROR: supabaseUrl is missing or empty');
  throw new Error('supabaseUrl is required but not provided');
}

if (!supabaseKey || supabaseKey.trim() === '') {
  console.error('ERROR: supabaseKey is missing or empty');
  throw new Error('supabaseKey is required but not provided');
}

console.log('Creating Supabase client with validated credentials...');

// Create the client lazily - only when accessed
let _supabase: ReturnType<typeof createClient<Database>> | null = null;

export const supabase = new Proxy({} as ReturnType<typeof createClient<Database>>, {
  get(target, prop) {
    if (!_supabase) {
      console.log('=== Creating Supabase client on first access ===');
      _supabase = createClient<Database>(supabaseUrl, supabaseKey, {
        auth: {
          persistSession: true,
          autoRefreshToken: true,
        }
      });
    }
    return _supabase[prop as keyof typeof _supabase];
  }
});

// Also export a function version for compatibility
export const getSupabaseClient = () => {
  console.log('=== Getting Supabase client ===');
  if (!_supabase) {
    console.log('=== Creating Supabase client via function ===');
    _supabase = createClient<Database>(supabaseUrl, supabaseKey, {
      auth: {
        persistSession: true,
        autoRefreshToken: true,
      }
    });
  }
  return _supabase;
};

console.log('=== SUPABASE CLIENT MODULE LOADED ===');
